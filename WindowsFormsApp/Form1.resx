<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QCCRXhpZgAATU0AKgAAAAgAAwEOAAIAAAA4AAAAMgEaAAUAAAAB
        AAAAagEbAAUAAAABAAAAcgAAAABBYnN0cmFjdCBiYWNrZ3JvdW5kLCBjb2xvciBncmFkaWVudCBsaWdo
        dCBibHVlIC0gd2hpdGUuAAAAASwAAAABAAABLAAAAAH/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0V
        FhEYIx8lJCIfIiEmKzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIo
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wgARCAHLAmQD
        AREAAhEBAxEB/8QAGAABAQEBAQAAAAAAAAAAAAAAAAEFBAb/xAAXAQEBAQEAAAAAAAAAAAAAAAAAAQMC
        /9oADAMBAAIQAxAAAAH0uuVAAKAACgAQBaAAEAAgKEAQCAUIAQJAQVAQEBAkICUIEgICAEAB38aUAAoA
        BQABAAtAACACAoQBAIBQgBAkBBUBAQECQgIKgSAgBAQAGhxoABQAAUCFBAAtAACACAoQBABBQgBAkBBU
        BAQECQgIKgSAgBAQAGhxqQBFoIUEKohQQABaAAgAEKAgQAQUIAQJAQVAQEBAkICCoCIIAQEABocakARa
        CFBFoIUEAAWgAIABCgIEAEFCAEBEEFQEAIQJAQgqAiCAEBAAaHGpALCghQQqwFIAAAtACAAQFCBABBQg
        BARBBQhACECQEIKgIggBACAGhxqQIopAUgKsBSAAALQAEAEBQgQAQUIAQEQQUICAhARBASoCIIAQAgBo
        cakCKKQFICrAUgAAC0ABAAIUIAgEAoQEBEEFCAgIQEQQEqAiCAEAIAaHGpAiikBSAqwAAAABaAEAAhQE
        CAQChAQEQCCoCAhARBAQlCBIAQAgBocakCWoAAAKAAAAAWgBAAIUBAgEAoQEAIggqAgIQEQQEJQgSAEA
        IAaHGpAWyBakBSCqQFIAABaAEAAhQECAQChAQAiCCoCAhARBCAlCBIAQAgBocakBUlFqQLUgLUBSAAAU
        UAIBAUBAgEAqAEBAkAJQgIQEQQgIKgSAEAIAaHGqFhUVCghQQtCAAAAC0BABAUBAgEAJQEBAkAJQgIQE
        QQgIKgSAEAIAaHGoSBaiotSBakBagKQAAAWhAIAUBAgEAJQEBAkAJUBAQEIggIKgSAgBAAaHGoQQqrJF
        tJCghRUBSAAAAAABQgCAQAlAQECQEFQEBARICAgJQiCAEABocagIIUVItCFBC1AAAAAAAAoCABBAQCoA
        RBAQVAQEICIICEFQIIAQAGhnqJVEEKKkWhFqCFqAAAAAABQEACCAEAqAECQEBKEBCAiCEBBUCCAEAIaH
        GtghVIIUELQhQQtQAAAABQQJQAJAAQCoCAiAQEoQgICIIQEBBZACAEBoZ6hSKhVICkhRUKCCgAAAAAEo
        AARABAKgICIICCoCAhAkBCAgCShAAQGhxqgACoUEKCFqApAKAAAASgAAIgAgBKEAIggIKgIQECQgICAg
        QSgIAaGeoAAFAAAQtCAAAAAAAKAEAQQAgoQECQEBKEBAQiCAgICIIASgBoZ6gAAAUABCkFAAAAAAAoCA
        IIAQCoCAJAQEFQgICBIQEBARAIAKhoZ6gCgAAFAAQpKAAAAABQgABEAEBKAgIggICCoCEBAkICAgQQAg
        oaGeoAAFAAAKAEAAoABABQAAgQCAgoQECQAgJUBAQgIghACAiAQAHfxoKFAAAoAAKgAAAAACgAIAEgBA
        CUIAkBAQVCAgICJAQEBAggBAaHGgAAqgAAUBABQAAAKAgAABEAgBBQgIggICCoQEBAkICAgIEEAB38aU
        AABSVQQpAWoAAAAAoAACABBACAVAQJAQEBKgICAiCEBAQBIAQGhxoABQAApKFIUgFAAAAoAQAAEQCAEF
        CAiCAgICVAQECQgICAgQQAHfxpQAAAUABQSgAAAAAUAAIAEgAICUIAkBAQEIKgICJAQEBARAIAaHGgAA
        oAABQAACgAAUAIAACAIIAQVAQIICAhAQEqAiCAgICIIACGhxoAKAACgAAFAAAAAoAAQAAiAQEAqAiCAg
        ICEBBUCQgICAiAQAGhxoAAAKAACgAAAAFAJQAAEACQAgIKECQEBAQgICCyEBAQECQAEBocaggAoAAKAA
        AUAAAAUBAACAIIAQEFQJACEBAQEILICAgIRAIAAd/GoAFQAAUAAFAAAAAAFCAAAiAQEBBQiCAhAQEBAR
        JQgICBIAQAHfxqBQAAlAABQAAAAAAAKAgAIgEBACCoggICAgIQJCAgoQiAQAgB38a0AAAoCACgAAAoAI
        AABQEACQAgICAWQEICAgIQJAQEFQiAQAgBoZ6hQAFAABQgAAoAAABAABQgCQAgIAQJBUICAgICJAQEBK
        JAQAgBoZ6gAC0AAKAAgoAAAAAIAAKgCQAgBAQJAShAQgIEhAQEBAkoQAEBoZ6gACgAVQAAUIAAAAABAA
        CUCQAgBAQJAQVAQESAgICEBEEoQAEBoZ6gAUAAFAoAUBAAAAABAACUCQAgBAQJAQVAQJAQgICEASEoCA
        AhoZ6gCgAAoAALQABAAAAAIABUQQAgBAQJAQEFQJAQgICECCEFCAAhoZ6gAUAAoAAKABQIAAAAIACBFQ
        AEBARBAQEBKiCAgICBICEAqAAhoZ6gAUAAoABQAABYAAAABACIAJQEBARBAQEBCIJQgICIICAgqAIIaG
        ewAoAAKAAUAAAIAFAAAQAiACCoCAJAQEBARICUICBICAgICBFAd+epQKAACgAFAAAQABQAAEAIgAgqAg
        QQEBAQJAQEJQiCAgIQAiAAd/GoBaAACgAFAACAAAKAAgASAAgIKgQQEBARBAQEILICAhACIBAAd/GooA
        CkLQAAUAIUgAAAUAIAEgBACAJKEBAQEQQEICIqAgIQIIACAGhxqAAAKFIUCgAIAAAAAoCAIBAQAgCShA
        QECQEBCAiCCoCAiAQAgBocagAAUAALUAAAAFABABQECAQEAIEEoQEBEEBAQEQQgqAgSAEAIAaHGoAAoA
        AKAAAUAAAAEAoCIBACAJAQEoQBICEBAkBAShCIBAQAEBocagCgAAFAABQAAAAAQCgIgEAIAkBAQUIEgI
        QBICEBBUQQEAIACGhxrQAAAUAAFAAAAAAAIALBACAEQQAgJQiCAgIEgICAhLAICAEABocagAAUAAoAAA
        AKAQAAAgRQgBAEgICAVAkBAQESAgICCyAgBACAGhxqAKAACgAAFAAAAAIAAkAoQAgSAEBALIQEBAkBAQ
        ECShAQAgACaHGwAAFAAAKAAAAAAAAQIBKAgBEEAICCyAgICIICAgSCoCAgAIgGhxsi0AAAKAAACgAAAA
        gAQQChACIIAQECShAQEQQEBARBKEBAgikAGhnsAoCgAAFAAAAAAAABEAEoCAJACEAIioCAgSAgICBIKg
        IEEABAaOeyghQRaAAAFAAAAAAAIEAgFQAiAQEBECoCAhEEBAQJAShAEgAIAf/8QAFBABAAAAAAAAAAAA
        AAAAAAAAwP/aAAgBAQABBQILl//EABQRAQAAAAAAAAAAAAAAAAAAAMD/2gAIAQMBAT8BC5f/xAAUEQEA
        AAAAAAAAAAAAAAAAAADA/9oACAECAQE/AQuX/8QAFBABAAAAAAAAAAAAAAAAAAAAwP/aAAgBAQAGPwIL
        l//EABQQAQAAAAAAAAAAAAAAAAAAAMD/2gAIAQEAAT8hC5f/2gAMAwEAAgADAAAAEKLZSCDQSH8AABJJ
        kBIS/wACJJ980wQBvKCGmmtbJU2ykEEgkP7AAASTICSl/gRJPvmmCCN9YQ00lrbI22EkikMj/YAACSZA
        SUt8CBZ980wQR/rCGmktbZC28lkehkf7YAASSYASlvgQLPvmmCCP5YQU0nrbIW3ksjkMj/7AACSTACUt
        +CBZd80wAR9rCCmk1/ZC2slmetl//bAASSZASlvwQLLvk2ACHtYQU0mt7YW9ls/1sv8A+2AAEkyAlJfg
        kWXfJogEHaQgptNL2wt7LZ/rZ/8A9sAAJJEBIS/gIsu+TQBIO0hBTaaXthb2Wz/W3/8A7bAASSYASl/g
        RZdtmgCQdtKCG00nbC3Ntv8A7b//ANtgAJJMAJS/wIMk2zRBIO2lBDaaTthbGw3v02v/ALbAASSYASl/
        gQZJtmgCQdvKCG00nTC2dhsf5tf/AG2QAEmwAlL/ADIMs+3SBIO3lhDSaTLgrM0mt8m//wDbYASTYASl
        /uQZZ9ukAQVvLCGk0mXAfzMNj/Nr/wC22Ak2wAlJ/cgyz7doggHeWENNptoAX0eDW+za/wDttttsgJCT
        25BFn3zRBAe8soKbTaCAF9nk1vm3/wD7bbbIASAnv8QLvvmiCQd9bCU0m0lKBfZ5Mb5t/wD/ANtsgBJC
        bX2IFn33RBIK/lhCaTSZE0F9vk1vm222kkAlJAbe+xBl2+6BBAW8ssaTabdpmgtPs1v222kkklJABaX2
        IMu++YIJD3ssnTaTaFts0vt83v8AtttJKSQAWl9uCJd98wSCG9ZZZuk2lJJbJJbfJv8A/wD9ttsABITe
        /BBn33RBAKesku+3aSkkktkkvv22/wD5LJIASE3v8QTPvviQQQnLLL9/s3bZJJbJJfdtttpJICSAWl9y
        CLvvvCAQQnLLd/v0pJbZJLbJL/8A7bS20kAEpPfggz/fYggEFI2WXb/b/aSW2SS2bb//APtsAAJAbX+o
        IH33wIIIDRllm+3/AP8A/wCkltkn/wBtttIASSACk/vgAd994CCCEwZZbv8Ab7bf+6TX+bf/AP8A7SSA
        CSE1vsQR999SCCCkxZZPt/v/APbb+7TX/bbbSAAkgAtP74EFffeQgghNEWWb/brbb/7b+3bf/wD/APaQ
        ACSG1vuCQ199LCCA00QQVv8A5Nvrbf8A23/+222ABJIBIT++IIT32sspBTTBBTe37bSTf22/+23/AP8A
        0gAEkAtPfwgpp7y2WENpggtN7ZJJtpJ/7bf/AP8A9pSSACQG194CGmvpZZYmmiCG0v8AANtJNtLf/wC2
        220gBJAJCbX1hDaX1lksaaYBabSTJJCTbSTb22//AP8A2QEkAFJp60FNNyyyydNMENJtJkgAkpJtpLP/
        AP8A/bbACQC003LCmmjLJZ/vwCk0mwQACSAG2km2/tt7bbACQGk05bGm0QZbPvrAWmkyBICSACSAm20l
        ttJbbICQ0mmJZ82iCLJ99ZQ02CSJLbACSACWkklttJbZISG00jLPumCQZ/vLLOmQCRLbZJaACSAkkklp
        JbZKQ2mgQZ98wQGvvpZd0yASLbZJbZKSQAm20gJLbJSG02CCPviCGk15LJuASARbZJLZJbYAAW2kAJLb
        IU2mwQR99YQ0miCbt6CQCLbZLbJLbJJSW2gBJbJbm0iCCnvrIW00QR9rYSAQSTJLZLbJJba20AAJbL9u
        kQQU95Zb+mCCntLCQmiSAAbJbZJLbf8A9gAAyX7fEEhpqyy/dEENNSWW5JskAEkAWySW3/8A7QABEv2+
        IJTTRFn30oKaYlsv+3bYAJIAJElt/wD/APsAEgf7eWEppggr7yWNNEyXb/btJJlgAkgAO/8A/wD+gCQH
        9/LJ00wQU97LmmCbv9vtkkm2kGSAAW3/AP8A/wAASUnv5bOmiCGnrZd8QRdvpbIkm2km2Ek222lt/oAS
        k0/Ld00QU0wZd/CCG97LZE22km2kk20kkktvIAUmlZPvuCA0iDPvqCUmvZLa20k22km2kkkkktbQC02r
        Z996CGiQPt5YU09rZLUkm20k20km2221pbYm0yLvt9QU0QQ9pZakx5LZIm22km0km220k27JLcmgSPvv
        IQ0QQGvLLGiBZLbW2km2km20kkkkkTZP8mQR/vLI2iCGnLLOiCBbJMkm2km20k22222gBbt2CQd/rLGi
        CCmLLPmCCQL/AN5JJtpJttpJJJIEmb/IgFfaSzpggpoyy7oglO/bbdtJJtpJtttttkAX7cgkNb2S5ogh
        pyyz5ghN7f7JZPJJNtJNtttAAG7fwgFJ6y7MEEpqyz7gkNrf7//EABQRAQAAAAAAAAAAAAAAAAAAAMD/
        2gAIAQMBAT8QC5f/xAAUEQEAAAAAAAAAAAAAAAAAAADA/9oACAECAQE/EAuX/8QAHBABAQEBAQEBAQEA
        AAAAAAAAABEBECAwUEBg/9oACAEBAAE/EPnnnPxd5rfWt7vje7zfzd8a3zrWtb53xvje74z+7flvd5vd
        b53ut8a3xrfO/k763m+N9a1rfGt8a3zv6O+d9a1vjW+t8b+jvy1rf4N/X3xrfG933reb7z8Tfpvd5re7
        zW/Lfxt+G/HfOta1vN+e/nb8d9a3mtb+zv13u81rf8FvvebzfOt/c31re63xvjf5M/l3+DfG/Df7c3+r
        W/DfW81vda3m+9/S34a1rWt87+1v03m+db/Rm/Kqv8+/TfG83+m/m63xvd+tX1fV/B34b3W91vN/gvq/
        nb3e7zf476v4W/Peb3W837X3fN/J3xvdb974q+b9aq/27zfW/DfdX1fV/J1vN878b7vi+b9aqr/XrWt1
        vrfd5frfN/J1vw1vq9v3vxvKqqq+L/Nutb6vN+F7f7r/AE7vd5fFVur8L5qryqvb4vi/O+LyqvKq9qry
        qqqvN1uqqqrW6rVVVVfFVVVVXl5eVfFVfNVVXxVVV5VVVVVVVVVVW7yt1VVW6rd5V5VVVVV5VVVVVVVV
        VXlVVXlVVVVVVVVVVVVVVVVVVVW6qt1VVVbrdVVXlVVVVXlVVVVVVVVVV5VVVVVVVVVVVVVVVVVVVVVV
        VVVVVVVbrdVVVVVVVVVVVVVVVVVVVVVVVVXlVVVVVVVVVVVVVVVVVVbqqqqqt1uqqqrdVVVVVVVVVVVV
        VVVVVVVVVVVVVVVVVVVVVVVVVVVVbrdVVVVVut1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
        VVVut1VVVVut1uqqq3W6qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqrdVVVuqqqqqqqqqqqqqq
        qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3W6qqqq3W6qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
        qqqqqrdVVVVVW63VVVVut1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVbqqqqqqqt1VVW6qq3VV
        VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVbqqqq3W6qq3VVut1VVVVVVVVVVVVVVVVVVVVVVVVV
        VVVVVVVVVVVVVVVW63VVVbrdVVbqq3VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVW6qq3W63
        VVuqqt1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVW6qq3VVuqqq3VVVVVVVVVVVVVVVVVVV
        VVVVVVVVVVVVVVVVVVVVVVVW63VVW6qqqq3W6qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3VVVV
        uqqt1ut1VVW63W6qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqt1VVuqqqqt1VVVVut1uqqqqqqqqq
        qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3VVVVVbqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
        qqqrdVVVut1uqqt1VVW6qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3VVW6qqqqqqqqqqv
        KqqqqvKqqqryqqqqqqqqqqqqqqqqqqqqqqq3VVVVW6qqrdVW6qqqqqqqqqqqqqqqqqqvKvaqqqqqqqqq
        qqqqqvKqt1uqqq3W6qqqt1VVeVe1VXxV5V5eVeVeXl7eVVVVVVVVVVVVVVVVVVVVVu8va3eVeXtVe3zV
        +N7fNXl7V7VXxVVeXlXl5W753VXxVXt9Xt7VX535XzfjV81eXlb41u+t3t5fF9VfNX+Or4q/w1vnfW+d
        37Vfwr9N8743m+N/Y3zvnfG81vd5vz//2Q==
</value>
  </data>
</root>